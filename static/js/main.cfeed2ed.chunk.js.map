{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","clockName","getRandomName","timerId","timerIdName","timerIdConsoleName","prevName","this","window","setInterval","setState","console","log","massage","clearInterval","value","Math","random","toString","slice","className","toLocaleTimeString","Component","App","hasClock","handlerClickClose","event","preventDefault","handlerClickOpen","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAOaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,KACVC,UAAW,EAAKC,iBAHpB,EAMEC,QAAU,EANZ,EAQEC,YAAc,EARhB,EAUEC,mBAAqB,EAVvB,EAYEC,SAAW,EAAKR,MAAMG,UAZxB,uDAcE,WAAqB,IAAD,OAClBM,KAAKJ,QAAUK,OAAOC,aAAY,WAChC,IAAMV,EAAO,IAAIC,KAEjB,EAAKU,SAAS,CAAEX,SAEhBY,QAAQC,IAAI,EAAKd,MAAMC,QACtB,KAEHQ,KAAKH,YAAcI,OAAOC,aAAY,WACpC,IAAMR,EAAY,EAAKC,gBAEvB,EAAKQ,SAAS,CAAET,cAEhBU,QAAQC,IAAI,EAAKd,MAAMG,aACtB,MAEHM,KAAKF,mBAAqBG,OAAOC,aAAY,WAC3C,IAAMI,EAAO,uBAAmB,EAAKP,SAAxB,eAAuC,EAAKR,MAAMG,WAG/DU,QAAQC,IAAIC,KACX,OApCP,kCAuCE,WACEL,OAAOM,cAAcP,KAAKJ,SAC1BK,OAAOM,cAAcP,KAAKH,aAC1BI,OAAOM,cAAcP,KAAKF,sBA1C9B,2BA8CE,WACE,IAAMU,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,KAjDpB,oBAoDE,WACE,IAAQhB,EAASQ,KAAKT,MAAdC,KACAE,EAAcM,KAAKT,MAAnBG,UAER,OACE,sBAAKmB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGnB,IAGF,YAED,sBAAMmB,UAAU,cAAhB,SACGrB,EAAKsB,8BAjEhB,GAA2BC,aCCdC,EAAb,4MACEzB,MAAyB,CACvB0B,UAAU,GAFd,EAeEC,kBAAoB,SAACC,GACnBA,EAAMC,iBACN,EAAKjB,SAAS,CAAEc,UAAU,KAjB9B,EAoBEI,iBAAmB,WACjB,EAAKlB,SAAS,CAAEc,UAAU,KArB9B,uDAKE,WACEK,SAASC,iBAAiB,cAAevB,KAAKkB,mBAC9CI,SAASC,iBAAiB,QAASvB,KAAKqB,oBAP5C,kCAUE,WACEC,SAASE,oBAAoB,cAAexB,KAAKkB,mBACjDI,SAASE,oBAAoB,QAASxB,KAAKqB,oBAZ/C,oBAwBE,WACE,IAAQJ,EAAajB,KAAKT,MAAlB0B,SAER,OACE,sBAAKJ,UAAU,MAAf,UACE,6CACCI,GAAY,cAAC,EAAD,WA9BrB,GAAyBF,aCLzBU,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.cfeed2ed.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  date: Date;\n  clockName: string,\n};\n\nexport class Clock extends Component<{}, State> {\n  state = {\n    date: new Date(),\n    clockName: this.getRandomName(),\n  };\n\n  timerId = 0;\n\n  timerIdName = 0;\n\n  timerIdConsoleName = 0;\n\n  prevName = this.state.clockName;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      const date = new Date();\n\n      this.setState({ date });\n      // eslint-disable-next-line no-console\n      console.log(this.state.date);\n    }, 1000);\n\n    this.timerIdName = window.setInterval(() => {\n      const clockName = this.getRandomName();\n\n      this.setState({ clockName });\n      // eslint-disable-next-line no-console\n      console.log(this.state.clockName);\n    }, 3300);\n\n    this.timerIdConsoleName = window.setInterval(() => {\n      const massage = `Renamed from ${this.prevName} to ${this.state.clockName}`;\n\n      // eslint-disable-next-line no-console\n      console.log(massage);\n    }, 4000);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n    window.clearInterval(this.timerIdName);\n    window.clearInterval(this.timerIdConsoleName);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getRandomName() {\n    const value = Math.random().toString().slice(2, 6);\n\n    return `Clock-${value}`;\n  }\n\n  render() {\n    const { date } = this.state;\n    const { clockName } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {date.toLocaleTimeString()}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\ntype State = {\n  hasClock: boolean,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n  };\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.handlerClickClose);\n    document.addEventListener('click', this.handlerClickOpen);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.handlerClickClose);\n    document.removeEventListener('click', this.handlerClickOpen);\n  }\n\n  handlerClickClose = (event: MouseEvent): void => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  handlerClickOpen = (): void => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}